@tailwind base;
@tailwind components;
@tailwind utilities;

/* @layer utilities {
  .absolute-top-left-above {
    background-color: coral;
  }
} */
.firebase-emulator-warning {
  display: none;
}

@layer base {
  html {
    @apply font-sans;
  }
}

@layer utilities {
  @variants responsive {
    /* Chrome, Safari and Opera */
    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }

    .no-scrollbar {
      -ms-overflow-style: none; /* IE and Edge */
      scrollbar-width: none; /* Firefox */
    }
  }
}

body,
html {
  overflow-x: hidden;
}

input {
  font-weight: inherit;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  box-shadow: 0 0 0 30px white inset !important;
  -webkit-box-shadow: 0 0 0 30px white inset !important;
}

/* TIPTAP TEXT EDITOR */

/* * apply placeholder to first child only (workaround) */
.ProseMirror .is-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #ced4da;
  pointer-events: none;
  height: 0;
}

.tip-tap-placeholder-dark::before {
  color: rgb(156, 163, 175) !important;
}

.ProseMirror a {
  color: rgb(37, 99, 235);
}

/* * workaround for tailwind 'prose' applying margin to all p tags, and ProseMirror creating p tags within li tags */
.ProseMirror p {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.ProseMirror h3 {
  font-size: 1.4em !important;
}

.ProseMirror h4 {
  font-size: 1.2em !important;
}

.ProseMirror h5 {
  color: #72757a !important;
  font-size: 1.1em !important;
}

.ProseMirror h3,
h4,
h5 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  font-weight: 400 !important;
}

.ProseMirror sup {
  color: red;
}

/* PROSEMIRROR CUSTOM CLASSES */

.swiper-slide {
  height: auto !important;
}
